name: nasa-project
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    environment: global_env
    env:
      CI: true
      MONGO_URL: mongodb://localhost/nasa
    strategy:
      matrix:
        node-version: ['16']
        mongodb-version: ['5.0']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
      - run: npm install
      - run: npm run fe build
      - env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          ACCESS_TOKEN_KEY: '111111'
          REFRESH_TOKEN_KEY: '111111111'
        run: npm test

      # build docker image and push to docker hub
      - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p${{ secrets.DOCKER_PASSWD }}  
      - run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/nasa-project
      - run: docker push ${{ secrets.DOCKER_USERNAME }}/nasa-project
        
  deploy:
    needs: build
    name: Deploy to EC2
    environment: global_env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Restart Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_DNS_NAME }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/nasa-project
            docker rm -fv nasa-server
            docker run -d \
              -e MONGO_URL="${{ secrets.MONGO_URL }}" \
              -e GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
              -e ACCESS_TOKEN_KEY=${{ secrets.ACCESS_TOKEN_KEY }} \
              -e REFRESH_TOKEN_KEY=${{ secrets.REFRESH_TOKEN_KEY }} \
              -e HOST_NAME="${{ secrets.AWS_DNS_NAME }}" \
              -p 8000:8000 --name nasa-server ${{ secrets.DOCKER_USERNAME }}/nasa-project
            docker image prune -a -f
      